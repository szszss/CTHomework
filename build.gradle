buildscript {
    repositories {
		maven{url 'http://maven.oschina.net/content/groups/public/'}
    }
	
    dependencies {
		classpath 'ca.coglinc:javacc-gradle-plugin:2.3.1'
    }
}

allprojects  {

	apply plugin: 'java'
	apply plugin: 'eclipse'
	apply plugin: 'idea'
	apply plugin: "ca.coglinc.javacc"

	eclipseJdt << {
		File f = file('.settings/org.eclipse.core.resources.prefs')
		f.write('eclipse.preferences.version=1\n')
		f.append('encoding/<project>=utf-8')
	}
	compileJava{options.encoding = 'utf-8'}
	[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

	repositories {
		maven{url 'http://maven.oschina.net/content/groups/public/'}
	}

	dependencies {
		testCompile 'junit:junit:4.12'
	}

	sourceSets {
		main {
			java {
				srcDir "src/main/javacc"
			}
		}
	}
}

project(":lexer") {
	ext {
		jjtPackage = 'src/main/javacc/lexer'
	}
	compileJavacc {
		inputDirectory = file(jjtPackage)
		outputDirectory = file(jjtPackage)
	}
	compileJavacc.doLast {
		delete file(jjtPackage + '/tmp')
	}
	eclipseClasspath.dependsOn("compileJavacc")
}

project(":parser") {
	ext {
		jjtPackage = 'src/main/javacc/parser'
	}
	compileJavacc {
		inputDirectory = file(jjtPackage)
		outputDirectory = file(jjtPackage)
	}
	compileJjtree {
		inputDirectory = file(jjtPackage)
		outputDirectory = file(jjtPackage)
	}
	compileJavacc.doLast {
		delete file(jjtPackage + '/tmp')
	}
	eclipseClasspath.dependsOn("compileJjtree", "compileJavacc")
}

tasks.eclipse.doLast {
    delete ".project"
}